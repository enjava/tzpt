<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

   <!--扫码包下的注解-->
    <context:component-scan base-package="com.ray.cool"/>


    <!-- 配置C3P0连接池: -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl"
                  value="jdbc:mysql://localhost:3306/spring?useUnicode=true&amp;characterEncoding=utf-8" />
        <property name="user" value="tenghui" />
        <property name="password" value="tenghui5614" />
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="10"></property>
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="minPoolSize" value="3"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="30"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"></property>
        <!--最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" destroy-method="destroy">
        <property name="dataSource" ref="dataSource"></property>
        <property name="packagesToScan">
            <list>
               <value>com.ray.cool.web.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.ray.cool.web.biz.*</value>
            </list>
        </property>
    </bean>
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

     <!--配置事务传播特性 -->

     <!--使用AspectJ方式配置AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <aop:config/>
    <aop:config  proxy-target-class="true">
                     <!--execution(* com.biz..*.*(..))-->
    <aop:advisor pointcut="execution(* com.ray.cool.web.biz..*.*(..))" advice-ref="transactionAdvice" /> <!-- 配置哪些类的哪些方法参与事务 -->
    </aop:config>
    <tx:advice id="transactionAdvice" transaction-manager="txManager">
    <tx:attributes>
    <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    <tx:method name="do*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
    <tx:method name="get*" read-only="true" />
    <tx:method name="load*" read-only="true" />
    <tx:method name="find*" read-only="true" />
    <tx:method name="search*" read-only="true" />
    <tx:method name="*" read-only="true" />
    </tx:attributes>
    </tx:advice>

    <tx:annotation-driven transaction-manager="txManager" />

</beans>